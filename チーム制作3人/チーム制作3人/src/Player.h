#pragma once
#include "Struct.h"



//------------------//
//     命名規則     //
//-----------------//
// ○ 関数
//
// ex) void GetPos(int pos_);
//
//----------------------------------
// ○ 変数
//
// ex) int object_num = 100;
//
//----------------------------------
// ○ 構造体
//
// ex) struct Status
//     {
//        int x;
//     }
//
//------------------------------------
// ○ enum&#define
//
// ex) #define WINDOW_WIDTH 500
// ex) enum Scene
//     {
//       TITLE.
//       MAIN,
//       RESULT
//     }
//
//---------------------------------------
// ○ ネスト
//
// ex) if(true)
//     {
//       //処理
//     }
//
//-----------------------------------------------------------------


// 番号順に関数を作る
// ネストが3つ以上になったら要相談
// 10分以上考えても分かんなかったら相談！
// これが必要じゃないかと思ったら相談！


//TODO:enum型の引数でタイプが変わるようにする
//TODO:あたり判定はmapchipでやる(移動も)
//TODO:弱点属性をいれるかどうか

//できたら
//カードの種類を取得し、そのカードに一致する攻撃をする
//ex)物理攻撃,攻撃魔法,防御魔法



class Player
{
public:
  //1:コンストラクタ:ここで引数をもらい初期化する
  Player(){};

  //2:タイプで基本ステータスを設定
  void SetUp();
  //3:移動処理(できれば斜めも)
  void move();
  //5:与えるダメージを取得できる
  Damege GiveDamege();
  //4:タイプによってスキルの攻撃力が変わる処理を作る
  void DamageCalculation();

  //6:受けるダメージを取得し計算をしてhpに反映
  void GivenDamege();
  
private:
  Type type;

};